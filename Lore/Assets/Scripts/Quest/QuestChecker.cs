using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class QuestChecker : MonoBehaviour
{
    public void QuestCalculation(GameObject adventurer, GameObject currentQuest)
    {
        //will hold our questcheck value. positive = success for now. later implementation will have ranges.
        int questresultvalue;

        //holds how many monsters were generated from the quest.
        int monsters = currentQuest.GetComponent<testquest>().combatants;

        //Holds rewards that were generated by the test quest.
        List<GameObject> rewards = currentQuest.GetComponent<testquest>().ListOfRewards;

        //Shows adventurer's current inventory
        List<RewardStats> iHave = adventurer.GetComponent<Inventory>().inventorySlots;

        if (adventurer.name == "King"){
            //determines success rate of the monster
            int diceroll =  rollDice.RollDice(4, monsters);
            //determines success rate of the adventurer
            int questsave = rollDice.RollDice(6, 6);

            //Quest success check.
            questresultvalue = questsave - diceroll;
            //If the adventurer succeeded
            if (questresultvalue >= 0)
            {
                Debug.Log("Success! Coming home!");
                Debug.Log("Adventurer bringing home: \n");
                foreach (GameObject reward in rewards)
                {
                    Debug.Log(reward.name + "REWARD NAME");
                    adventurer.GetComponent<Inventory>().AddItem(reward);
                    Debug.Log(iHave[0].name + "in inventory");
                }
            }
            else
            {
                Debug.Log("Failure. Coming home.");
            }
        }
    }
}


